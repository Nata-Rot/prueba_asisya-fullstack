version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: asisya-postgres
    environment:
      POSTGRES_DB: AsisyaDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - asisya-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Optional for future use)
  redis:
    image: redis:7-alpine
    container_name: asisya-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - asisya-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ASP.NET Core API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asisya-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=AsisyaDb;Username=postgres;Password=postgres123
      - Jwt__Key=MySecretKeyForJWTTokenGeneration123456789012345
      - Jwt__Issuer=AsisyaApi
      - Jwt__Audience=AsisyaApi
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - asisya-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: asisya-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - asisya-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  asisya-network:
    driver: bridge